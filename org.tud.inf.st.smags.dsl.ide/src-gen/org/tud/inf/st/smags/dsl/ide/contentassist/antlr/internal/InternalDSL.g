/*
 * generated by Xtext 2.10.0
 */
grammar InternalDSL;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.tud.inf.st.smags.dsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.tud.inf.st.smags.dsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.tud.inf.st.smags.dsl.services.DSLGrammarAccess;

}
@parser::members {
	private DSLGrammarAccess grammarAccess;

	public void setGrammarAccess(DSLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleSmagsModel
entryRuleSmagsModel
:
{ before(grammarAccess.getSmagsModelRule()); }
	 ruleSmagsModel
{ after(grammarAccess.getSmagsModelRule()); } 
	 EOF 
;

// Rule SmagsModel
ruleSmagsModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSmagsModelAccess().getGroup()); }
		(rule__SmagsModel__Group__0)
		{ after(grammarAccess.getSmagsModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSmagsElement
entryRuleSmagsElement
:
{ before(grammarAccess.getSmagsElementRule()); }
	 ruleSmagsElement
{ after(grammarAccess.getSmagsElementRule()); } 
	 EOF 
;

// Rule SmagsElement
ruleSmagsElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSmagsElementAccess().getAlternatives()); }
		(rule__SmagsElement__Alternatives)
		{ after(grammarAccess.getSmagsElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImport
entryRuleImport
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportAccess().getGroup()); }
		(rule__Import__Group__0)
		{ after(grammarAccess.getImportAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMetaArchitecture
entryRuleMetaArchitecture
:
{ before(grammarAccess.getMetaArchitectureRule()); }
	 ruleMetaArchitecture
{ after(grammarAccess.getMetaArchitectureRule()); } 
	 EOF 
;

// Rule MetaArchitecture
ruleMetaArchitecture 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMetaArchitectureAccess().getGroup()); }
		(rule__MetaArchitecture__Group__0)
		{ after(grammarAccess.getMetaArchitectureAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMetaArchitectureElement
entryRuleMetaArchitectureElement
:
{ before(grammarAccess.getMetaArchitectureElementRule()); }
	 ruleMetaArchitectureElement
{ after(grammarAccess.getMetaArchitectureElementRule()); } 
	 EOF 
;

// Rule MetaArchitectureElement
ruleMetaArchitectureElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMetaArchitectureElementAccess().getAlternatives()); }
		(rule__MetaArchitectureElement__Alternatives)
		{ after(grammarAccess.getMetaArchitectureElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getAlternatives()); }
		(rule__Type__Alternatives)
		{ after(grammarAccess.getTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExternalType
entryRuleExternalType
:
{ before(grammarAccess.getExternalTypeRule()); }
	 ruleExternalType
{ after(grammarAccess.getExternalTypeRule()); } 
	 EOF 
;

// Rule ExternalType
ruleExternalType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExternalTypeAccess().getGroup()); }
		(rule__ExternalType__Group__0)
		{ after(grammarAccess.getExternalTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimitiveType
entryRulePrimitiveType
:
{ before(grammarAccess.getPrimitiveTypeRule()); }
	 rulePrimitiveType
{ after(grammarAccess.getPrimitiveTypeRule()); } 
	 EOF 
;

// Rule PrimitiveType
rulePrimitiveType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimitiveTypeAccess().getGroup()); }
		(rule__PrimitiveType__Group__0)
		{ after(grammarAccess.getPrimitiveTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariable
entryRuleVariable
:
{ before(grammarAccess.getVariableRule()); }
	 ruleVariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule Variable
ruleVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableAccess().getGroup()); }
		(rule__Variable__Group__0)
		{ after(grammarAccess.getVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnonymousVariable
entryRuleAnonymousVariable
:
{ before(grammarAccess.getAnonymousVariableRule()); }
	 ruleAnonymousVariable
{ after(grammarAccess.getAnonymousVariableRule()); } 
	 EOF 
;

// Rule AnonymousVariable
ruleAnonymousVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAnonymousVariableAccess().getTypeAssignment()); }
		(rule__AnonymousVariable__TypeAssignment)
		{ after(grammarAccess.getAnonymousVariableAccess().getTypeAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMethod
entryRuleMethod
:
{ before(grammarAccess.getMethodRule()); }
	 ruleMethod
{ after(grammarAccess.getMethodRule()); } 
	 EOF 
;

// Rule Method
ruleMethod 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMethodAccess().getGroup()); }
		(rule__Method__Group__0)
		{ after(grammarAccess.getMethodAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePortTypeElement
entryRulePortTypeElement
:
{ before(grammarAccess.getPortTypeElementRule()); }
	 rulePortTypeElement
{ after(grammarAccess.getPortTypeElementRule()); } 
	 EOF 
;

// Rule PortTypeElement
rulePortTypeElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPortTypeElementAccess().getGroup()); }
		(rule__PortTypeElement__Group__0)
		{ after(grammarAccess.getPortTypeElementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCompositionOperator
entryRuleCompositionOperator
:
{ before(grammarAccess.getCompositionOperatorRule()); }
	 ruleCompositionOperator
{ after(grammarAccess.getCompositionOperatorRule()); } 
	 EOF 
;

// Rule CompositionOperator
ruleCompositionOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCompositionOperatorAccess().getBindOperatorParserRuleCall()); }
		ruleBindOperator
		{ after(grammarAccess.getCompositionOperatorAccess().getBindOperatorParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getAlternatives()); }
		(rule__EString__Alternatives)
		{ after(grammarAccess.getEStringAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComponentType
entryRuleComponentType
:
{ before(grammarAccess.getComponentTypeRule()); }
	 ruleComponentType
{ after(grammarAccess.getComponentTypeRule()); } 
	 EOF 
;

// Rule ComponentType
ruleComponentType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComponentTypeAccess().getGroup()); }
		(rule__ComponentType__Group__0)
		{ after(grammarAccess.getComponentTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePortType
entryRulePortType
:
{ before(grammarAccess.getPortTypeRule()); }
	 rulePortType
{ after(grammarAccess.getPortTypeRule()); } 
	 EOF 
;

// Rule PortType
rulePortType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPortTypeAccess().getGroup()); }
		(rule__PortType__Group__0)
		{ after(grammarAccess.getPortTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRoleModel
entryRuleRoleModel
:
{ before(grammarAccess.getRoleModelRule()); }
	 ruleRoleModel
{ after(grammarAccess.getRoleModelRule()); } 
	 EOF 
;

// Rule RoleModel
ruleRoleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRoleModelAccess().getGroup()); }
		(rule__RoleModel__Group__0)
		{ after(grammarAccess.getRoleModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRoleModelSlot
entryRuleRoleModelSlot
:
{ before(grammarAccess.getRoleModelSlotRule()); }
	 ruleRoleModelSlot
{ after(grammarAccess.getRoleModelSlotRule()); } 
	 EOF 
;

// Rule RoleModelSlot
ruleRoleModelSlot 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRoleModelSlotAccess().getGroup()); }
		(rule__RoleModelSlot__Group__0)
		{ after(grammarAccess.getRoleModelSlotAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBindOperator
entryRuleBindOperator
:
{ before(grammarAccess.getBindOperatorRule()); }
	 ruleBindOperator
{ after(grammarAccess.getBindOperatorRule()); } 
	 EOF 
;

// Rule BindOperator
ruleBindOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBindOperatorAccess().getGroup()); }
		(rule__BindOperator__Group__0)
		{ after(grammarAccess.getBindOperatorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArchitecture
entryRuleArchitecture
:
{ before(grammarAccess.getArchitectureRule()); }
	 ruleArchitecture
{ after(grammarAccess.getArchitectureRule()); } 
	 EOF 
;

// Rule Architecture
ruleArchitecture 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArchitectureAccess().getGroup()); }
		(rule__Architecture__Group__0)
		{ after(grammarAccess.getArchitectureAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArchitectureElement
entryRuleArchitectureElement
:
{ before(grammarAccess.getArchitectureElementRule()); }
	 ruleArchitectureElement
{ after(grammarAccess.getArchitectureElementRule()); } 
	 EOF 
;

// Rule ArchitectureElement
ruleArchitectureElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArchitectureElementAccess().getAlternatives()); }
		(rule__ArchitectureElement__Alternatives)
		{ after(grammarAccess.getArchitectureElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComponent
entryRuleComponent
:
{ before(grammarAccess.getComponentRule()); }
	 ruleComponent
{ after(grammarAccess.getComponentRule()); } 
	 EOF 
;

// Rule Component
ruleComponent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComponentAccess().getGroup()); }
		(rule__Component__Group__0)
		{ after(grammarAccess.getComponentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePort
entryRulePort
:
{ before(grammarAccess.getPortRule()); }
	 rulePort
{ after(grammarAccess.getPortRule()); } 
	 EOF 
;

// Rule Port
rulePort 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPortAccess().getGroup()); }
		(rule__Port__Group__0)
		{ after(grammarAccess.getPortAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeBinding
entryRuleTypeBinding
:
{ before(grammarAccess.getTypeBindingRule()); }
	 ruleTypeBinding
{ after(grammarAccess.getTypeBindingRule()); } 
	 EOF 
;

// Rule TypeBinding
ruleTypeBinding 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeBindingAccess().getGroup()); }
		(rule__TypeBinding__Group__0)
		{ after(grammarAccess.getTypeBindingAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SmagsElement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSmagsElementAccess().getMetaArchitectureParserRuleCall_0()); }
		ruleMetaArchitecture
		{ after(grammarAccess.getSmagsElementAccess().getMetaArchitectureParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getSmagsElementAccess().getArchitectureParserRuleCall_1()); }
		ruleArchitecture
		{ after(grammarAccess.getSmagsElementAccess().getArchitectureParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaArchitectureElement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMetaArchitectureElementAccess().getComponentTypeParserRuleCall_0()); }
		ruleComponentType
		{ after(grammarAccess.getMetaArchitectureElementAccess().getComponentTypeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getMetaArchitectureElementAccess().getPortTypeParserRuleCall_1()); }
		rulePortType
		{ after(grammarAccess.getMetaArchitectureElementAccess().getPortTypeParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getMetaArchitectureElementAccess().getRoleModelParserRuleCall_2()); }
		ruleRoleModel
		{ after(grammarAccess.getMetaArchitectureElementAccess().getRoleModelParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getExternalTypeParserRuleCall_0()); }
		ruleExternalType
		{ after(grammarAccess.getTypeAccess().getExternalTypeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getPrimitiveTypeParserRuleCall_1()); }
		rulePrimitiveType
		{ after(grammarAccess.getTypeAccess().getPrimitiveTypeParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PortTypeElement__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPortTypeElementAccess().getVariableParserRuleCall_0_0()); }
		ruleVariable
		{ after(grammarAccess.getPortTypeElementAccess().getVariableParserRuleCall_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getPortTypeElementAccess().getMethodParserRuleCall_0_1()); }
		ruleMethod
		{ after(grammarAccess.getPortTypeElementAccess().getMethodParserRuleCall_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
		RULE_ID
		{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArchitectureElement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArchitectureElementAccess().getComponentParserRuleCall_0()); }
		ruleComponent
		{ after(grammarAccess.getArchitectureElementAccess().getComponentParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getArchitectureElementAccess().getPortParserRuleCall_1()); }
		rulePort
		{ after(grammarAccess.getArchitectureElementAccess().getPortParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SmagsModel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SmagsModel__Group__0__Impl
	rule__SmagsModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SmagsModel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSmagsModelAccess().getSmagsModelAction_0()); }
	()
	{ after(grammarAccess.getSmagsModelAccess().getSmagsModelAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SmagsModel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SmagsModel__Group__1__Impl
	rule__SmagsModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SmagsModel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSmagsModelAccess().getGroup_1()); }
	(rule__SmagsModel__Group_1__0)?
	{ after(grammarAccess.getSmagsModelAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SmagsModel__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SmagsModel__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SmagsModel__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSmagsModelAccess().getElementsAssignment_2()); }
	(rule__SmagsModel__ElementsAssignment_2)*
	{ after(grammarAccess.getSmagsModelAccess().getElementsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SmagsModel__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SmagsModel__Group_1__0__Impl
	rule__SmagsModel__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SmagsModel__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSmagsModelAccess().getImportsKeyword_1_0()); }
	'imports'
	{ after(grammarAccess.getSmagsModelAccess().getImportsKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SmagsModel__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SmagsModel__Group_1__1__Impl
	rule__SmagsModel__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SmagsModel__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSmagsModelAccess().getLeftCurlyBracketKeyword_1_1()); }
	'{'
	{ after(grammarAccess.getSmagsModelAccess().getLeftCurlyBracketKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SmagsModel__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SmagsModel__Group_1__2__Impl
	rule__SmagsModel__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SmagsModel__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSmagsModelAccess().getImportsAssignment_1_2()); }
	(rule__SmagsModel__ImportsAssignment_1_2)*
	{ after(grammarAccess.getSmagsModelAccess().getImportsAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SmagsModel__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SmagsModel__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SmagsModel__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSmagsModelAccess().getRightCurlyBracketKeyword_1_3()); }
	'}'
	{ after(grammarAccess.getSmagsModelAccess().getRightCurlyBracketKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getImportURIAssignment_0()); }
	(rule__Import__ImportURIAssignment_0)
	{ after(grammarAccess.getImportAccess().getImportURIAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getSemicolonKeyword_1()); }
	';'
	{ after(grammarAccess.getImportAccess().getSemicolonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MetaArchitecture__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MetaArchitecture__Group__0__Impl
	rule__MetaArchitecture__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaArchitecture__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetaArchitectureAccess().getMetaArchitectureKeyword_0()); }
	'MetaArchitecture'
	{ after(grammarAccess.getMetaArchitectureAccess().getMetaArchitectureKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaArchitecture__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MetaArchitecture__Group__1__Impl
	rule__MetaArchitecture__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaArchitecture__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetaArchitectureAccess().getNameAssignment_1()); }
	(rule__MetaArchitecture__NameAssignment_1)
	{ after(grammarAccess.getMetaArchitectureAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaArchitecture__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MetaArchitecture__Group__2__Impl
	rule__MetaArchitecture__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaArchitecture__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetaArchitectureAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getMetaArchitectureAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaArchitecture__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MetaArchitecture__Group__3__Impl
	rule__MetaArchitecture__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaArchitecture__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetaArchitectureAccess().getTypesAssignment_3()); }
	(rule__MetaArchitecture__TypesAssignment_3)*
	{ after(grammarAccess.getMetaArchitectureAccess().getTypesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaArchitecture__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MetaArchitecture__Group__4__Impl
	rule__MetaArchitecture__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaArchitecture__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetaArchitectureAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getMetaArchitectureAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaArchitecture__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MetaArchitecture__Group__5__Impl
	rule__MetaArchitecture__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaArchitecture__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetaArchitectureAccess().getLeftCurlyBracketKeyword_5()); }
	'{'
	{ after(grammarAccess.getMetaArchitectureAccess().getLeftCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaArchitecture__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MetaArchitecture__Group__6__Impl
	rule__MetaArchitecture__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaArchitecture__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetaArchitectureAccess().getElementsAssignment_6()); }
	(rule__MetaArchitecture__ElementsAssignment_6)*
	{ after(grammarAccess.getMetaArchitectureAccess().getElementsAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaArchitecture__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MetaArchitecture__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaArchitecture__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetaArchitectureAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getMetaArchitectureAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExternalType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalType__Group__0__Impl
	rule__ExternalType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalTypeAccess().getTypeKeyword_0()); }
	'Type'
	{ after(grammarAccess.getExternalTypeAccess().getTypeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalType__Group__1__Impl
	rule__ExternalType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalTypeAccess().getNameAssignment_1()); }
	(rule__ExternalType__NameAssignment_1)
	{ after(grammarAccess.getExternalTypeAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalType__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalTypeAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getExternalTypeAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimitiveType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveType__Group__0__Impl
	rule__PrimitiveType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveTypeAccess().getPrimitiveKeyword_0()); }
	'Primitive'
	{ after(grammarAccess.getPrimitiveTypeAccess().getPrimitiveKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveType__Group__1__Impl
	rule__PrimitiveType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveTypeAccess().getNameAssignment_1()); }
	(rule__PrimitiveType__NameAssignment_1)
	{ after(grammarAccess.getPrimitiveTypeAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimitiveType__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveTypeAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getPrimitiveTypeAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__0__Impl
	rule__Variable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getTypeAssignment_0()); }
	(rule__Variable__TypeAssignment_0)
	{ after(grammarAccess.getVariableAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getNameAssignment_1()); }
	(rule__Variable__NameAssignment_1)
	{ after(grammarAccess.getVariableAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group__0__Impl
	rule__Method__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getReturnTypeAssignment_0()); }
	(rule__Method__ReturnTypeAssignment_0)
	{ after(grammarAccess.getMethodAccess().getReturnTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group__1__Impl
	rule__Method__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getNameAssignment_1()); }
	(rule__Method__NameAssignment_1)
	{ after(grammarAccess.getMethodAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group__2__Impl
	rule__Method__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getMethodAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group__3__Impl
	rule__Method__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getGroup_3()); }
	(rule__Method__Group_3__0)?
	{ after(grammarAccess.getMethodAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getMethodAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group_3__0__Impl
	rule__Method__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getArgsAssignment_3_0()); }
	(rule__Method__ArgsAssignment_3_0)
	{ after(grammarAccess.getMethodAccess().getArgsAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getGroup_3_1()); }
	(rule__Method__Group_3_1__0)*
	{ after(grammarAccess.getMethodAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group_3_1__0__Impl
	rule__Method__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getCommaKeyword_3_1_0()); }
	','
	{ after(grammarAccess.getMethodAccess().getCommaKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getArgsAssignment_3_1_1()); }
	(rule__Method__ArgsAssignment_3_1_1)
	{ after(grammarAccess.getMethodAccess().getArgsAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PortTypeElement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PortTypeElement__Group__0__Impl
	rule__PortTypeElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PortTypeElement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortTypeElementAccess().getAlternatives_0()); }
	(rule__PortTypeElement__Alternatives_0)
	{ after(grammarAccess.getPortTypeElementAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PortTypeElement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PortTypeElement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PortTypeElement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortTypeElementAccess().getSemicolonKeyword_1()); }
	';'
	{ after(grammarAccess.getPortTypeElementAccess().getSemicolonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentType__Group__0__Impl
	rule__ComponentType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentTypeAccess().getComponentTypeAction_0()); }
	()
	{ after(grammarAccess.getComponentTypeAccess().getComponentTypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentType__Group__1__Impl
	rule__ComponentType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentTypeAccess().getComponentTypeKeyword_1()); }
	'ComponentType'
	{ after(grammarAccess.getComponentTypeAccess().getComponentTypeKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentType__Group__2__Impl
	rule__ComponentType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentTypeAccess().getNameAssignment_2()); }
	(rule__ComponentType__NameAssignment_2)
	{ after(grammarAccess.getComponentTypeAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentType__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentTypeAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getComponentTypeAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PortType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PortType__Group__0__Impl
	rule__PortType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PortType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortTypeAccess().getPortTypeAction_0()); }
	()
	{ after(grammarAccess.getPortTypeAccess().getPortTypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PortType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PortType__Group__1__Impl
	rule__PortType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PortType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortTypeAccess().getPortTypeKeyword_1()); }
	'PortType'
	{ after(grammarAccess.getPortTypeAccess().getPortTypeKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PortType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PortType__Group__2__Impl
	rule__PortType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PortType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortTypeAccess().getNameAssignment_2()); }
	(rule__PortType__NameAssignment_2)
	{ after(grammarAccess.getPortTypeAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PortType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PortType__Group__3__Impl
	rule__PortType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PortType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortTypeAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getPortTypeAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PortType__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PortType__Group__4__Impl
	rule__PortType__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PortType__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortTypeAccess().getElementsAssignment_4()); }
	(rule__PortType__ElementsAssignment_4)*
	{ after(grammarAccess.getPortTypeAccess().getElementsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PortType__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PortType__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PortType__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortTypeAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getPortTypeAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RoleModel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoleModel__Group__0__Impl
	rule__RoleModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleModel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoleModelAccess().getRoleModelAction_0()); }
	()
	{ after(grammarAccess.getRoleModelAccess().getRoleModelAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleModel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoleModel__Group__1__Impl
	rule__RoleModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleModel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoleModelAccess().getRoleModelKeyword_1()); }
	'RoleModel'
	{ after(grammarAccess.getRoleModelAccess().getRoleModelKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleModel__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoleModel__Group__2__Impl
	rule__RoleModel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleModel__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoleModelAccess().getNameAssignment_2()); }
	(rule__RoleModel__NameAssignment_2)
	{ after(grammarAccess.getRoleModelAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleModel__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoleModel__Group__3__Impl
	rule__RoleModel__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleModel__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoleModelAccess().getGroup_3()); }
	(rule__RoleModel__Group_3__0)?
	{ after(grammarAccess.getRoleModelAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleModel__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoleModel__Group__4__Impl
	rule__RoleModel__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleModel__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoleModelAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getRoleModelAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleModel__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoleModel__Group__5__Impl
	rule__RoleModel__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleModel__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoleModelAccess().getInitializationAssignment_5()); }
	(rule__RoleModel__InitializationAssignment_5)*
	{ after(grammarAccess.getRoleModelAccess().getInitializationAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleModel__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoleModel__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleModel__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoleModelAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getRoleModelAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RoleModel__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoleModel__Group_3__0__Impl
	rule__RoleModel__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleModel__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoleModelAccess().getLeftParenthesisKeyword_3_0()); }
	'('
	{ after(grammarAccess.getRoleModelAccess().getLeftParenthesisKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleModel__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoleModel__Group_3__1__Impl
	rule__RoleModel__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleModel__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoleModelAccess().getSlotsAssignment_3_1()); }
	(rule__RoleModel__SlotsAssignment_3_1)
	{ after(grammarAccess.getRoleModelAccess().getSlotsAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleModel__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoleModel__Group_3__2__Impl
	rule__RoleModel__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleModel__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoleModelAccess().getGroup_3_2()); }
	(rule__RoleModel__Group_3_2__0)*
	{ after(grammarAccess.getRoleModelAccess().getGroup_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleModel__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoleModel__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleModel__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoleModelAccess().getRightParenthesisKeyword_3_3()); }
	')'
	{ after(grammarAccess.getRoleModelAccess().getRightParenthesisKeyword_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RoleModel__Group_3_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoleModel__Group_3_2__0__Impl
	rule__RoleModel__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleModel__Group_3_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoleModelAccess().getCommaKeyword_3_2_0()); }
	','
	{ after(grammarAccess.getRoleModelAccess().getCommaKeyword_3_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleModel__Group_3_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoleModel__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleModel__Group_3_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoleModelAccess().getSlotsAssignment_3_2_1()); }
	(rule__RoleModel__SlotsAssignment_3_2_1)
	{ after(grammarAccess.getRoleModelAccess().getSlotsAssignment_3_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RoleModelSlot__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoleModelSlot__Group__0__Impl
	rule__RoleModelSlot__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleModelSlot__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoleModelSlotAccess().getRoleModelSlotAction_0()); }
	()
	{ after(grammarAccess.getRoleModelSlotAccess().getRoleModelSlotAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleModelSlot__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoleModelSlot__Group__1__Impl
	rule__RoleModelSlot__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleModelSlot__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoleModelSlotAccess().getTypeAssignment_1()); }
	(rule__RoleModelSlot__TypeAssignment_1)
	{ after(grammarAccess.getRoleModelSlotAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleModelSlot__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RoleModelSlot__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleModelSlot__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoleModelSlotAccess().getNameAssignment_2()); }
	(rule__RoleModelSlot__NameAssignment_2)
	{ after(grammarAccess.getRoleModelSlotAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BindOperator__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BindOperator__Group__0__Impl
	rule__BindOperator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BindOperator__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBindOperatorAccess().getBindOperatorAction_0()); }
	()
	{ after(grammarAccess.getBindOperatorAccess().getBindOperatorAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BindOperator__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BindOperator__Group__1__Impl
	rule__BindOperator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BindOperator__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBindOperatorAccess().getBindKeyword_1()); }
	'bind'
	{ after(grammarAccess.getBindOperatorAccess().getBindKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BindOperator__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BindOperator__Group__2__Impl
	rule__BindOperator__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BindOperator__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBindOperatorAccess().getRoleKeyword_2()); }
	'role'
	{ after(grammarAccess.getBindOperatorAccess().getRoleKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BindOperator__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BindOperator__Group__3__Impl
	rule__BindOperator__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BindOperator__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBindOperatorAccess().getToAssignment_3()); }
	(rule__BindOperator__ToAssignment_3)
	{ after(grammarAccess.getBindOperatorAccess().getToAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BindOperator__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BindOperator__Group__4__Impl
	rule__BindOperator__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__BindOperator__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBindOperatorAccess().getToKeyword_4()); }
	'to'
	{ after(grammarAccess.getBindOperatorAccess().getToKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BindOperator__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BindOperator__Group__5__Impl
	rule__BindOperator__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__BindOperator__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBindOperatorAccess().getSlotAssignment_5()); }
	(rule__BindOperator__SlotAssignment_5)
	{ after(grammarAccess.getBindOperatorAccess().getSlotAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BindOperator__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BindOperator__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BindOperator__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBindOperatorAccess().getSemicolonKeyword_6()); }
	';'
	{ after(grammarAccess.getBindOperatorAccess().getSemicolonKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Architecture__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Architecture__Group__0__Impl
	rule__Architecture__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Architecture__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArchitectureAccess().getArchitectureKeyword_0()); }
	'Architecture'
	{ after(grammarAccess.getArchitectureAccess().getArchitectureKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Architecture__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Architecture__Group__1__Impl
	rule__Architecture__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Architecture__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArchitectureAccess().getNameAssignment_1()); }
	(rule__Architecture__NameAssignment_1)
	{ after(grammarAccess.getArchitectureAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Architecture__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Architecture__Group__2__Impl
	rule__Architecture__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Architecture__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArchitectureAccess().getColonColonKeyword_2()); }
	'::'
	{ after(grammarAccess.getArchitectureAccess().getColonColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Architecture__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Architecture__Group__3__Impl
	rule__Architecture__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Architecture__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArchitectureAccess().getTypeAssignment_3()); }
	(rule__Architecture__TypeAssignment_3)
	{ after(grammarAccess.getArchitectureAccess().getTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Architecture__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Architecture__Group__4__Impl
	rule__Architecture__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Architecture__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArchitectureAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getArchitectureAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Architecture__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Architecture__Group__5__Impl
	rule__Architecture__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Architecture__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArchitectureAccess().getTypeBindingsAssignment_5()); }
	(rule__Architecture__TypeBindingsAssignment_5)*
	{ after(grammarAccess.getArchitectureAccess().getTypeBindingsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Architecture__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Architecture__Group__6__Impl
	rule__Architecture__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Architecture__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArchitectureAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getArchitectureAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Architecture__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Architecture__Group__7__Impl
	rule__Architecture__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Architecture__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArchitectureAccess().getLeftCurlyBracketKeyword_7()); }
	'{'
	{ after(grammarAccess.getArchitectureAccess().getLeftCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Architecture__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Architecture__Group__8__Impl
	rule__Architecture__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Architecture__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArchitectureAccess().getElementsAssignment_8()); }
	(rule__Architecture__ElementsAssignment_8)*
	{ after(grammarAccess.getArchitectureAccess().getElementsAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Architecture__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Architecture__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Architecture__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArchitectureAccess().getRightCurlyBracketKeyword_9()); }
	'}'
	{ after(grammarAccess.getArchitectureAccess().getRightCurlyBracketKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Component__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group__0__Impl
	rule__Component__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getComponentKeyword_0()); }
	'Component'
	{ after(grammarAccess.getComponentAccess().getComponentKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group__1__Impl
	rule__Component__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getNameAssignment_1()); }
	(rule__Component__NameAssignment_1)
	{ after(grammarAccess.getComponentAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group__2__Impl
	rule__Component__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getColonColonKeyword_2()); }
	'::'
	{ after(grammarAccess.getComponentAccess().getColonColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group__3__Impl
	rule__Component__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getTypeAssignment_3()); }
	(rule__Component__TypeAssignment_3)
	{ after(grammarAccess.getComponentAccess().getTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Component__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getComponentAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Port__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Port__Group__0__Impl
	rule__Port__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortAccess().getPortKeyword_0()); }
	'Port'
	{ after(grammarAccess.getPortAccess().getPortKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Port__Group__1__Impl
	rule__Port__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortAccess().getNameAssignment_1()); }
	(rule__Port__NameAssignment_1)
	{ after(grammarAccess.getPortAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Port__Group__2__Impl
	rule__Port__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortAccess().getColonColonKeyword_2()); }
	'::'
	{ after(grammarAccess.getPortAccess().getColonColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Port__Group__3__Impl
	rule__Port__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortAccess().getTypeAssignment_3()); }
	(rule__Port__TypeAssignment_3)
	{ after(grammarAccess.getPortAccess().getTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Port__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getPortAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeBinding__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeBinding__Group__0__Impl
	rule__TypeBinding__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeBinding__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeBindingAccess().getTypeAssignment_0()); }
	(rule__TypeBinding__TypeAssignment_0)
	{ after(grammarAccess.getTypeBindingAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeBinding__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeBinding__Group__1__Impl
	rule__TypeBinding__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeBinding__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeBindingAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getTypeBindingAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeBinding__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeBinding__Group__2__Impl
	rule__TypeBinding__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeBinding__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeBindingAccess().getImplementationAssignment_2()); }
	(rule__TypeBinding__ImplementationAssignment_2)
	{ after(grammarAccess.getTypeBindingAccess().getImplementationAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeBinding__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeBinding__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeBinding__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeBindingAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getTypeBindingAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SmagsModel__ImportsAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSmagsModelAccess().getImportsImportParserRuleCall_1_2_0()); }
		ruleImport
		{ after(grammarAccess.getSmagsModelAccess().getImportsImportParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SmagsModel__ElementsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSmagsModelAccess().getElementsSmagsElementParserRuleCall_2_0()); }
		ruleSmagsElement
		{ after(grammarAccess.getSmagsModelAccess().getElementsSmagsElementParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportURIAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_0_0()); }
		RULE_STRING
		{ after(grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaArchitecture__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMetaArchitectureAccess().getNameEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getMetaArchitectureAccess().getNameEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaArchitecture__TypesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMetaArchitectureAccess().getTypesTypeParserRuleCall_3_0()); }
		ruleType
		{ after(grammarAccess.getMetaArchitectureAccess().getTypesTypeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaArchitecture__ElementsAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMetaArchitectureAccess().getElementsMetaArchitectureElementParserRuleCall_6_0()); }
		ruleMetaArchitectureElement
		{ after(grammarAccess.getMetaArchitectureAccess().getElementsMetaArchitectureElementParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalType__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExternalTypeAccess().getNameEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getExternalTypeAccess().getNameEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveTypeAccess().getNameEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getPrimitiveTypeAccess().getNameEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getTypeTypeCrossReference_0_0()); }
		(
			{ before(grammarAccess.getVariableAccess().getTypeTypeEStringParserRuleCall_0_0_1()); }
			ruleEString
			{ after(grammarAccess.getVariableAccess().getTypeTypeEStringParserRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getVariableAccess().getTypeTypeCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getNameEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getVariableAccess().getNameEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnonymousVariable__TypeAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnonymousVariableAccess().getTypeTypeCrossReference_0()); }
		(
			{ before(grammarAccess.getAnonymousVariableAccess().getTypeTypeEStringParserRuleCall_0_1()); }
			ruleEString
			{ after(grammarAccess.getAnonymousVariableAccess().getTypeTypeEStringParserRuleCall_0_1()); }
		)
		{ after(grammarAccess.getAnonymousVariableAccess().getTypeTypeCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__ReturnTypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodAccess().getReturnTypeAnonymousVariableParserRuleCall_0_0()); }
		ruleAnonymousVariable
		{ after(grammarAccess.getMethodAccess().getReturnTypeAnonymousVariableParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodAccess().getNameEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getMethodAccess().getNameEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__ArgsAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodAccess().getArgsVariableParserRuleCall_3_0_0()); }
		ruleVariable
		{ after(grammarAccess.getMethodAccess().getArgsVariableParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__ArgsAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodAccess().getArgsVariableParserRuleCall_3_1_1_0()); }
		ruleVariable
		{ after(grammarAccess.getMethodAccess().getArgsVariableParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentType__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentTypeAccess().getNameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getComponentTypeAccess().getNameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PortType__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPortTypeAccess().getNameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getPortTypeAccess().getNameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PortType__ElementsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPortTypeAccess().getElementsPortTypeElementParserRuleCall_4_0()); }
		rulePortTypeElement
		{ after(grammarAccess.getPortTypeAccess().getElementsPortTypeElementParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleModel__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoleModelAccess().getNameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getRoleModelAccess().getNameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleModel__SlotsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoleModelAccess().getSlotsRoleModelSlotParserRuleCall_3_1_0()); }
		ruleRoleModelSlot
		{ after(grammarAccess.getRoleModelAccess().getSlotsRoleModelSlotParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleModel__SlotsAssignment_3_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoleModelAccess().getSlotsRoleModelSlotParserRuleCall_3_2_1_0()); }
		ruleRoleModelSlot
		{ after(grammarAccess.getRoleModelAccess().getSlotsRoleModelSlotParserRuleCall_3_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleModel__InitializationAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoleModelAccess().getInitializationCompositionOperatorParserRuleCall_5_0()); }
		ruleCompositionOperator
		{ after(grammarAccess.getRoleModelAccess().getInitializationCompositionOperatorParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleModelSlot__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoleModelSlotAccess().getTypeComponentTypeCrossReference_1_0()); }
		(
			{ before(grammarAccess.getRoleModelSlotAccess().getTypeComponentTypeEStringParserRuleCall_1_0_1()); }
			ruleEString
			{ after(grammarAccess.getRoleModelSlotAccess().getTypeComponentTypeEStringParserRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getRoleModelSlotAccess().getTypeComponentTypeCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleModelSlot__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoleModelSlotAccess().getNameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getRoleModelSlotAccess().getNameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BindOperator__ToAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBindOperatorAccess().getToPortTypeCrossReference_3_0()); }
		(
			{ before(grammarAccess.getBindOperatorAccess().getToPortTypeEStringParserRuleCall_3_0_1()); }
			ruleEString
			{ after(grammarAccess.getBindOperatorAccess().getToPortTypeEStringParserRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getBindOperatorAccess().getToPortTypeCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BindOperator__SlotAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBindOperatorAccess().getSlotRoleModelSlotCrossReference_5_0()); }
		(
			{ before(grammarAccess.getBindOperatorAccess().getSlotRoleModelSlotEStringParserRuleCall_5_0_1()); }
			ruleEString
			{ after(grammarAccess.getBindOperatorAccess().getSlotRoleModelSlotEStringParserRuleCall_5_0_1()); }
		)
		{ after(grammarAccess.getBindOperatorAccess().getSlotRoleModelSlotCrossReference_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Architecture__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArchitectureAccess().getNameEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getArchitectureAccess().getNameEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Architecture__TypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArchitectureAccess().getTypeMetaArchitectureCrossReference_3_0()); }
		(
			{ before(grammarAccess.getArchitectureAccess().getTypeMetaArchitectureEStringParserRuleCall_3_0_1()); }
			ruleEString
			{ after(grammarAccess.getArchitectureAccess().getTypeMetaArchitectureEStringParserRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getArchitectureAccess().getTypeMetaArchitectureCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Architecture__TypeBindingsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArchitectureAccess().getTypeBindingsTypeBindingParserRuleCall_5_0()); }
		ruleTypeBinding
		{ after(grammarAccess.getArchitectureAccess().getTypeBindingsTypeBindingParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Architecture__ElementsAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArchitectureAccess().getElementsArchitectureElementParserRuleCall_8_0()); }
		ruleArchitectureElement
		{ after(grammarAccess.getArchitectureAccess().getElementsArchitectureElementParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentAccess().getNameEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getComponentAccess().getNameEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__TypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentAccess().getTypeComponentTypeCrossReference_3_0()); }
		(
			{ before(grammarAccess.getComponentAccess().getTypeComponentTypeEStringParserRuleCall_3_0_1()); }
			ruleEString
			{ after(grammarAccess.getComponentAccess().getTypeComponentTypeEStringParserRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getComponentAccess().getTypeComponentTypeCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPortAccess().getNameEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getPortAccess().getNameEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__TypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPortAccess().getTypePortTypeCrossReference_3_0()); }
		(
			{ before(grammarAccess.getPortAccess().getTypePortTypeEStringParserRuleCall_3_0_1()); }
			ruleEString
			{ after(grammarAccess.getPortAccess().getTypePortTypeEStringParserRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getPortAccess().getTypePortTypeCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeBinding__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeBindingAccess().getTypeTypeCrossReference_0_0()); }
		(
			{ before(grammarAccess.getTypeBindingAccess().getTypeTypeEStringParserRuleCall_0_0_1()); }
			ruleEString
			{ after(grammarAccess.getTypeBindingAccess().getTypeTypeEStringParserRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getTypeBindingAccess().getTypeTypeCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeBinding__ImplementationAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeBindingAccess().getImplementationEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getTypeBindingAccess().getImplementationEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
