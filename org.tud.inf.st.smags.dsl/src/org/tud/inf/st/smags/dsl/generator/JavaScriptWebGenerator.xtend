/*
 * generated by Xtext 2.10.0
 */
package org.tud.inf.st.smags.dsl.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.builder.EclipseResourceFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import org.tud.inf.st.smags.model.smags.SmagsModel
import org.tud.inf.st.smags.model.smags.MetaArchitecture
import org.tud.inf.st.smags.model.smags.Architecture
import org.tud.inf.st.smags.dsl.Activator
import java.io.File
import org.eclipse.core.runtime.FileLocator
import java.io.BufferedReader
import java.io.FileReader

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class JavaScriptWebGenerator extends EquinoxGenerator {

	override protected doGenerate(Resource resource, EclipseResourceFileSystemAccess2 fsa, IGeneratorContext context) {
		for (m : resource.contents.filter(SmagsModel)) {
			for (a : m.elements.filter(Architecture)) {
				var project = a.pkg.createProject;
				fsa.project = project;

				addSoureFolder(project.extendToJava, "src-gen");

				fsa.outputPath = ".";
				fsa.generateFile("build.properties", buildProperties);
				fsa.generateFile("WEB-INF/" + a.name + ".html", a.html);
				fsa.generateFile("WEB-INF/" + a.name + ".js", a.javascript);
				fsa.generateFile("WEB-INF/smags.js", readResource("resources/smags.js"));
				fsa.generateFile("WEB-INF/" + a.type.name + ".js", a.type.javascript);

				fsa.outputPath = "src-gen";
				fsa.generateFile(a.pkg.replaceAll("\\.", "/") + '/' + a.name.toFirstUpper + "WebActivator.java",
					a.activator);

				project.extendToPlugin(#{a.pkg}, a.pkg + '.' + a.name.toFirstUpper + 'WebActivator', "org.eclipse.osgi",
					"org.tud.inf.st.smags.repository")
			}
		}
	}

	override protected def pkg(Architecture a) {
		return super.pkg(a) + ".web";
	}

	protected def readResource(String path) {
		val url = Activator.^default.context.bundle.getEntry(path);
		var file = new File(FileLocator.resolve(url).toURI());
		val buf = new StringBuffer();
		val reader = new BufferedReader(new FileReader(file));
		var line = "";
		while ((line = reader.readLine) != null) {
			buf.append(line + "\n\r");
		}
		reader.close;
		return buf.toString;
	}

	override protected def activator(Architecture a) '''
		package «a.pkg»;
		
		import org.osgi.framework.BundleActivator;
		import org.osgi.framework.BundleContext;
		
		public class «a.name.toFirstUpper»WebActivator implements BundleActivator{
			public void start(BundleContext context) throws Exception {
				
			}
			
			public void stop(BundleContext context) throws Exception {
				
			}			
		}		
	'''

	protected def javascript(MetaArchitecture a) ''''''

	protected def javascript(Architecture a) ''''''

	protected def html(Architecture a) '''
		<!DOCTYPE html>
		<html>
			<header>
				<title>«a.name»</title>
			</header>
			<body>
				<h1>«a.name»</h1>
			</body>
		</html>
	'''

}
